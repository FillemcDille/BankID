@page "/History"
@inject IAccountService AccountService

<h3 class="mb-4">📜 Transaktionshistorik</h3>

@if (_transactions.Count == 0)
{
    <div class="alert alert-info">
        Ingen historik tillgänglig ännu.
    </div>
}
else
{
    <div class="table-responsive shadow-sm rounded">
        <table class="table table-striped table-hover align-middle">
            <thead class="table-dark">
                <tr>
                    <th>Datum</th>
                    <th>Konto</th>
                    <th>Typ</th>
                    <th>Belopp</th>
                    <th>Saldo efter</th>
                    <th>Beskrivning</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var tx in _transactions.OrderByDescending(t => t.Date))
                {
                    <tr>
                        <td>@tx.Date.ToLocalTime().ToString("g")</td>
                        <td>@tx.AccountName</td>
                        <td>@tx.Type</td>
                        <td class="@(tx.Amount >= 0 ? "text-success fw-bold" : "text-danger fw-bold")">
                            @tx.Amount.ToString("C", new System.Globalization.CultureInfo("sv-SE"))
                        </td>
                        <td>@tx.BalanceAfter.ToString("C", new System.Globalization.CultureInfo("sv-SE"))</td>
                        <td>@tx.Description</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<hr class="my-5" />

<h3 class="mb-4">💰 Snabbinsättning</h3>

@if (_accounts.Count == 0)
{
    <div class="alert alert-warning">
        Inga konton hittades.
    </div>
}
else
{
    <div class="row row-cols-1 row-cols-md-3 g-4">
        @foreach (var account in _accounts)
        {
            <div class="col">
                <div class="card shadow-sm h-100">
                    <div class="card-body d-flex flex-column justify-content-between">
                        <div>
                            <h5 class="card-title">@account.Name</h5>
                            <p class="card-text text-muted mb-2">
                                Saldo: <strong>@account.Balance.ToString("C", new System.Globalization.CultureInfo("sv-SE"))</strong>
                            </p>
                        </div>
                        <button class="btn btn-success mt-2" @onclick="() => DepositToAccount(account.Id)">
                            💵 Sätt in 100 kr
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<Transaction> _transactions = new();
    private List<IBankAccount> _accounts = new();

    protected override async Task OnInitializedAsync()
    {
        _transactions = await AccountService.GetTransactionsHistoryAsync();
        _accounts = await AccountService.GetAccounts();
    }

    private async Task DepositToAccount(Guid accountId)
    {
        await AccountService.DepositAsync(accountId, 100);
        _transactions = await AccountService.GetTransactionsHistoryAsync();
        _accounts = await AccountService.GetAccounts();
        StateHasChanged();
    }
}
